@model NihongoSekai.Web.ViewModels.CourseCardViewModel

<div class="course-card h-100" data-course-id="@Model.Id">
    <div class="card h-100 shadow-sm border-0">
        <!-- Course Image -->
        <div class="position-relative course-image-container">
            <img src="@Model.CoverImageUrl" 
                 class="card-img-top course-image" 
                 alt="@Model.Title"
                 onerror="this.src='/images/course-placeholder.jpg'">
            
            <!-- Level Badge -->
            <span class="badge position-absolute top-0 end-0 m-3 level-badge level-@Model.Level.ToLower()">
                @Model.Level
            </span>
            
            <!-- Enrolled Badge -->
            @if (Model.IsEnrolled)
            {
                <span class="badge bg-success position-absolute top-0 start-0 m-3">
                    <i class="bi bi-check-circle me-1"></i>Enrolled
                </span>
            }
            
            <!-- Quick Action Overlay -->
            <div class="course-overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
                <a href="/courses/@Model.Id" class="btn btn-crimson btn-lg rounded-pill shadow quick-view-btn">
                    <i class="bi bi-play-circle me-2"></i>View Course
                </a>
            </div>
        </div>

        <div class="card-body d-flex flex-column">
            <!-- Course Title -->
            <h5 class="card-title fw-bold mb-2 course-title">
                <a href="/courses/@Model.Id" class="text-decoration-none text-dark stretched-link">
                    @Model.Title
                </a>
            </h5>

            <!-- Course Description -->
            <p class="card-text text-muted flex-grow-1 course-description">
                @Model.Description
            </p>

            <!-- Course Tags -->
            @if (Model.Tags.Any())
            {
                <div class="course-tags mb-3">
                    @foreach (var tag in Model.Tags.Take(3))
                    {
                        <span class="badge bg-light text-dark me-1 mb-1">@tag</span>
                    }
                </div>
            }

            <!-- Instructor Info -->
            <div class="instructor-info mb-3">
                <div class="d-flex align-items-center">
                    <img src="@Model.InstructorAvatar" 
                         alt="@Model.InstructorName" 
                         class="rounded-circle instructor-avatar me-2"
                         width="32" height="32"
                         onerror="this.src='/images/default-avatar.png'">
                    <div>
                        <div class="instructor-name fw-semibold">@Model.InstructorName</div>
                        <small class="text-muted">Instructor</small>
                    </div>
                </div>
            </div>

            <!-- Course Meta -->
            <div class="course-meta mb-3">
                <div class="row text-center">
                    <div class="col-4">
                        <div class="d-flex flex-column">
                            <small class="text-muted">Rating</small>
                            <div class="rating d-flex align-items-center justify-content-center">
                                <i class="bi bi-star-fill text-warning me-1"></i>
                                <span class="fw-semibold">@Model.Rating.ToString("F1")</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="d-flex flex-column">
                            <small class="text-muted">Students</small>
                            <span class="fw-semibold">@Model.StudentsCount.ToString("N0")</span>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="d-flex flex-column">
                            <small class="text-muted">Duration</small>
                            <span class="fw-semibold">@Model.Duration h</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Progress Bar (for enrolled students) -->
            @if (Model.IsEnrolled && Model.Progress > 0)
            {
                <div class="progress mb-3" style="height: 6px;">
                    <div class="progress-bar bg-success" 
                         role="progressbar" 
                         style="width: @Model.Progress%"
                         data-progress="@Model.Progress">
                    </div>
                </div>
                <small class="text-muted text-center d-block">@Model.Progress% Complete</small>
            }

            <!-- Price and Action -->
            <div class="course-footer d-flex align-items-center justify-content-between mt-auto">
                <div class="price">
                    @if (Model.Price == 0)
                    {
                        <span class="h5 fw-bold text-success mb-0">Free</span>
                    }
                    else
                    {
                        <span class="h5 fw-bold text-crimson mb-0">$@Model.Price.ToString("F2")</span>
                    }
                </div>

                @if (Model.IsEnrolled)
                {
                    <a href="/courses/@Model.Id" class="btn btn-outline-crimson">
                        <i class="bi bi-book-open me-1"></i>Continue
                    </a>
                }
                else
                {
                    <a href="/courses/@Model.Id" class="btn btn-crimson">
                        <i class="bi bi-cart-plus me-1"></i>Enroll
                    </a>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .course-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .course-card:hover {
        transform: translateY(-5px);
    }
    
    .course-card:hover .card {
        box-shadow: 0 10px 25px rgba(0,0,0,0.15) !important;
    }
    
    .course-image-container {
        overflow: hidden;
        border-radius: 0.375rem 0.375rem 0 0;
    }
    
    .course-image {
        height: 200px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .course-card:hover .course-image {
        transform: scale(1.05);
    }
    
    .course-overlay {
        background: rgba(0, 0, 0, 0.7);
        opacity: 0;
        transition: opacity 0.3s ease;
        border-radius: 0.375rem 0.375rem 0 0;
    }
    
    .course-card:hover .course-overlay {
        opacity: 1;
    }
    
    .quick-view-btn {
        transform: translateY(20px);
        transition: transform 0.3s ease;
    }
    
    .course-card:hover .quick-view-btn {
        transform: translateY(0);
    }
    
    .course-title {
        line-height: 1.3;
        height: 2.6em;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
    
    .course-description {
        font-size: 0.9rem;
        line-height: 1.4;
        height: 2.8em;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
    
    .instructor-avatar {
        border: 2px solid var(--bs-crimson-100);
    }
    
    .instructor-name {
        font-size: 0.9rem;
    }
    
    .level-badge {
        font-size: 0.75rem;
        padding: 0.375rem 0.75rem;
    }
    
    .level-beginner { background-color: #10b981; }
    .level-elementary { background-color: #3b82f6; }
    .level-intermediate { background-color: #f59e0b; }
    .level-advanced { background-color: #ef4444; }
    
    .course-tags .badge {
        font-size: 0.7rem;
        font-weight: 500;
    }
    
    .course-meta {
        font-size: 0.85rem;
        border-top: 1px solid var(--bs-gray-200);
        border-bottom: 1px solid var(--bs-gray-200);
        padding: 0.75rem 0;
    }
    
    .rating .bi-star-fill {
        color: #fbbf24;
        font-size: 0.9rem;
    }
    
    .progress {
        border-radius: 3px;
    }
    
    .course-footer {
        margin-top: 1rem;
    }
    
    @@media (max-width: 576px) {
        .course-image {
            height: 160px;
        }
        
        .course-meta .col-4 {
            margin-bottom: 0.5rem;
        }
        
        .course-footer {
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .course-footer .btn {
            width: 100%;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Add click tracking for analytics
    const courseCard = document.querySelector('[data-course-id="@Model.Id"]');
    if (courseCard) {
        courseCard.addEventListener('click', function(e) {
            // Track course card interaction
            if (typeof gtag !== 'undefined') {
                gtag('event', 'course_card_click', {
                    'course_id': '@Model.Id',
                    'course_title': '@Model.Title',
                    'course_level': '@Model.Level'
                });
            }
        });
    }
    
    // Initialize progress animation if enrolled
    @if (Model.IsEnrolled && Model.Progress > 0)
    {
        <text>
        const progressBar = courseCard.querySelector('.progress-bar[data-progress]');
        if (progressBar) {
            const progress = parseInt(progressBar.getAttribute('data-progress'));
            progressBar.style.width = '0%';
            
            setTimeout(() => {
                progressBar.style.transition = 'width 1s ease-in-out';
                progressBar.style.width = progress + '%';
            }, 200);
        }
        </text>
    }
});
</script>
